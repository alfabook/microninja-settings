#!/usr/bin/env python

# kano-settings-cli
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# Command line tool for changing settings on the Kano
#

# Copyright (C) 2016 Alfabook srl
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
# rebadged with microninja

import os
import sys
from docopt import docopt

import microninja_locale.translate
microninja_locale.translate.init_localization("microninja-settings") 

if __name__ == '__main__' and __package__ is None:
    dir_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    if dir_path != '/usr':
        sys.path.insert(1, dir_path)

from microninja_settings.system.keyboard_config import set_saved_keyboard
from microninja_settings.config_file import get_setting

verbose = False

def print_v(string):
    if verbose:
        print string

def parse_args():
    if args['-v'] or args['--verbose']:
        global verbose
        verbose = True

    if args['set']:
        # Need to b e root to change settings
        if os.environ['LOGNAME'] != 'root':
            exit("Error: Settings must be executed with root privileges")

        if args['audio']:
            if args['hdmi']:
                setting = 'hdmi'
            elif args['analogue']:
                setting = 'analogue'
            else:
                setting = 'default'
            print_v('setting audio to {}'.format(setting))
        elif args['keyboard']:
            if args['--load']:
                set_saved_keyboard()
                print_v('Setting keyboard to value loaded from settings')
    elif args['get']:
        if args['audio']:
            print_v(
                'Audio settings:\n\n'
                'Audio mode: {}'.format(
                    get_setting('Audio')
                )
            )
        elif args['network']:
            print_v(
                'Network settings:\n\n'
                'WiFi: {}, WiFi Connection Attempted: {},\n'
                'Proxy port : {}, Proxy IP: {}, '
                'Proxy username : {}, Proxy type : {}'.format(
                    get_setting('Wifi'),
                    get_setting('Wifi-connection-attempted'),
                    get_setting('Proxy-port'),
                    get_setting('Proxy-ip'),
                    get_setting('Proxy-username'),
                    get_setting('Proxy-type')
                )
            )
        elif args['keyboard']:
            print_v(
                'Keyboard settings:\n\n'
                'Continent: {}, Country: {}, Variant: {}\n'
                '(indicies - Continent: {}, Country: {}, Variant: {})'.format(
                    get_setting('Keyboard-continent-human'),
                    get_setting('Keyboard-country-human'),
                    get_setting('Keyboard-variant-human'),
                    get_setting('Keyboard-continent-index'),
                    get_setting('Keyboard-country-index'),
                    get_setting('Keyboard-variant-index')
                )
            )

if __name__ == "__main__":
    args = docopt("""
    Usage:
      microninja-settings-cli [-v | --verbose] get audio
      microninja-settings-cli [-v | --verbose] set audio (hdmi | analogue | default)
      microninja-settings-cli [-v | --verbose] get keyboard
      microninja-settings-cli [-v | --verbose] set keyboard (--layout <layout_code> | --load)
      microninja-settings-cli [-v | --verbose] get network
      microninja-settings-cli -h | --help

    Options:
      hdmi      Set the audio to HDMI
      analogue  Set the audio to use the headphone jack
      layout    The keyboard layout code
      load      Set the keyboard to the value saved by Microninja-Settings
      network   Get the network info
      verbose   Verbose mode
    """)

    parse_args()
